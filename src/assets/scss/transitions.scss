@use 'src/assets/scss/app';

@mixin transition($property: null, $delay: null) {
    transition-duration: app.$transition-duration;
    transition-timing-function: app.$transition-timing;

    @if ($property) {
        transition-property: $property;
    }

    @if ($delay) {
        transition-delay: $delay;
    }
}

/* Fade */
.fade-enter-active,
.fade-leave-active {
    @include transition(opacity);
}

.fade-enter-from,
.fade-leave-to {
    opacity: 0;
}

/* Fade and slide up */
.fade-up-enter-active,
.fade-up-leave-active {
    @include transition((opacity, transform));
}

.fade-up-enter-from,
.fade-up-leave-to {
    opacity: 0;
    transform: translateY(2vw);
}

/* Fade and slide left */
.fade-left-enter-active,
.fade-left-leave-active {
    @include transition((opacity, transform));
}

.fade-left-enter-from,
.fade-left-leave-to {
    opacity: 0;
    transform: translateX(2vw);
}

/* Fade and slide right */
.fade-right-enter-active,
.fade-right-leave-active {
    @include transition((opacity, transform));
}

.fade-right-enter-from,
.fade-right-leave-to {
    opacity: 0;
    transform: translateX(-2vw);
}

/* Fade and zoom */
.fade-zoom-enter-active,
.fade-zoom-leave-active {
    @include transition((opacity, transform));
}

.fade-zoom-enter-from,
.fade-zoom-leave-to {
    opacity: 0;
    transform: scale(0.95);
}

/* Prevent issue with reveal component */
.appear {
    display: flex;
    flex-direction: column;
}

.appear {
    &.fade-up-enter-from,
    &.fade-left-enter-from,
    &.fade-right-enter-from,
    &.fade-zoom-enter-from {
        transition: none;
    }
}
